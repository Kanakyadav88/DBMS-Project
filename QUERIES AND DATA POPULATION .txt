ONLINE AMAZON

ASSUMPTIONS:
1) Delivery partners are assigned automatically.
2) Sellers manage the delivery of their products to the inventory independently.


MAIN GOAL:
The primary focus of our app is to facilitate users, with our main focus directed towards enhancing the Customer Sector.


DESCRIPTION:
Following are the entity sets:

Admin: manages and supervises everything

Products:
1. Product_ID: Unique identifier for each product.
2. Category_ID: foreign key indicating the category to which the product belongs.
3. Name: The name 
4. Price: The cost of the product.
5. Quantity: The available quantity of the product in inventory.
6. Discount: Any reduction in price applied to the product.
7. Storage_Type: The type of storage required for the product (if applicable).
8. Rating: The score assigned to the product based on user feedback or reviews.
9. Description: A brief description or summary of the product.


Customers
1. Username: Unique identifier used for user login.
2. Password: Secure authentication credential for user access.
3. Name: 
First_Name: First name of the user.
Last_Name: Last name of the user.
4. Phone_Number: Contact number of the user.
5. Address: Complete address details of the user.
   	- House_No: Number indicating the house or apartment.
   	- Street_Name: Name of the street or locality.
  	 - City: Name of the city or town.
   	- Pincode: Postal code or ZIP code of the user's location.

Cart
1. Username: name of the custormer to which cart belongs
2. Billing_Amount: The total amount charged for the transaction 
3. {Product_ID}: The identifier(s) of the product(s) included in the billing.
4. Quantity: The quantity of each product id in cart.
5. Date: The date of the billing transaction.


Offers
1. Upto_Discount: The maximum discount applicable.
2. Category_ID: The identifier indicating the category to which offer is applicable.
3. Expiry_Date: The date when the offers expires or becomes invalid.


Category
1. Category_ID: Unique identifier for each category.
2. Category_name: name  of the category.


Orders
1. Order_ID: Unique identifier for each order.
2. Username: Identifier for the user who placed the order.
3. Order_Amount: Total amount charged for the order.
4. {Product_ID, Quantity}: Set of productID identifiers and corresponding quantities ordered.
5.Discount: Any reduction in price applied to the order.
6. Date_Order_Placed: The date when the order was placed.


Transactions & History:
1. Billing_ID: Unique identifier for each billing transaction.
2. Order_ID: Identifier linking the billing to the corresponding order.
3. Payment_Mode: Method of payment used for the billing transaction.
4. Bill_Amount: Total amount billed for the transaction.


Return
1. Return_ID: Unique identifier for each return transaction.
2. Order_ID: Identifier linking the return to the corresponding order.
3. Delivery_ID: Identifier linking the return to the corresponding delivery.
4. Return_Date: The date when the return was processed.


Track Order
1. Delivery_ID: Unique identifier for each delivery.
2. Delivery_Man_Name: Full name of the delivery personnel.
   - First_Name: First name of the delivery personnel.
   - Last_Name: Last name of the delivery personnel.
3. Phone_Number: Contact number of the delivery personnel.
4. Vehicle_Number: Identifier for the vehicle used for delivery.
5. Status: Current status of the delivery (e.g., ordered,shipped, delivered).
6. {Order_ID}: Set of identifiers for orders associated with the delivery.
7. Pickup_Address: Address from which the items are picked up for delivery.
   - House_No: Number indicating the house or apartment.
   - Street_Name: Name of the street or locality.
   - City: Name of the city or town.
   - Pincode: Postal code or ZIP code of the pickup location.
8. Expected_Arrival_Time: Estimated time of arrival for the delivery.
9. Delivery_Address: Address to which the items are delivered.
   - House_No: Number indicating the house or apartment.
   - Street_Name: Name of the street or locality.
   - City: Name of the city or town.
   - Pincode: Postal code or ZIP code of the delivery location.
10. Rating: The rating or score assigned to the delivery personnel based on user feedback or reviews.

Seller
1. Seller_ID: Unique identifier for each seller.
2. Password: Secure authentication credential for seller access.
3. {Product_ID}: Set of identifiers for products associated with the seller.
4. Quantity_sold: Quantity of the products sold 
4. Name: Full name of the seller.
5. Phone_Number: Contact number of the seller.
6. Email_ID: Email address of the seller.
7. Earnings: Total earnings generated by the seller.
8. Payment_Details: Details of the payment method(s) used by the seller for transactions.

Inventory
1. product_id:all the ids of products which are available in inventory.

*********************************************************************************************************************************************************

QUERIES AND DATA POPULATION 

Link - https://drive.google.com/drive/folders/1g-SMSC8rlOaDNBPOf45hcTta91Dg0tDG?usp=sharing 


CREATE DATABASE Online_Store_Amazon;
USE Online_Store_Amazon;


CREATE TABLE Admin (
username VARCHAR(50) PRIMARY KEY,
password VARCHAR(255)
);


INSERT INTO Admin (username, password) VALUES 
	('admin1', 'password123'),
	('admin2', 'password123');


CREATE TABLE Customer(
    	username VARCHAR(50) PRIMARY KEY,
    	password VARCHAR(255), 
    	first_name VARCHAR(50),
    	last_name VARCHAR(50),
    	phone_number VARCHAR(15), 
    	house_no VARCHAR(20),
    	street_name VARCHAR(100),
    	city VARCHAR(50),
    	pincode VARCHAR(10),
    	INDEX(username)
);




INSERT INTO Customer (username, password, first_name, last_name, phone_number, house_no, street_name, city, pincode) VALUES
	('user1', 'pass123', 'John', 'Doe', '1234567890', '123', 'Main St', 'New York', '10001'),
	('user2', 'pass456', 'Jane', 'Smith', '2345678901', '456', 'Broadway', 'Los Angeles', '90001'),
	('user3', 'pass789', 'Michael', 'Johnson', '3456789012', '789', 'Oak Ave', 'Chicago', '60601'),
	('user4', 'passabc', 'Emily', 'Brown', '4567890123', '1011', 'Elm St', 'Houston', '77001'),
	('user5', 'passdef', 'Emma', 'Wilson', '5678901234', '1213', 'Maple Ave', 'Phoenix', '85001');


CREATE TABLE Offers (
	category_ID INT,
	upto_discount DECIMAL(5, 2),
	expiry_date DATE, 
	FOREIGN KEY (category_ID) REFERENCES Category(category_ID)
);


INSERT INTO Offers (category_ID, upto_discount, expiry_date) VALUES
	(1, 20.00, '2024-02-25'),
	(2, 15.00, '2024-02-27'),
	(3, 25.00, '2024-03-01'),
	(4, 10.00, '2024-03-05'),
	(5, 30.00, '2024-03-10'),
	(6, 20.00, '2024-03-15'),
	(7, 10.00, '2024-03-20'),
	(8, 15.00, '2024-03-22'),
	(9, 25.00, '2024-03-25');



CREATE TABLE Category (
    	category_ID INT PRIMARY KEY,
    	category_name VARCHAR(100)
);


INSERT INTO Category (category_ID, category_name) VALUES
	(1, 'Furniture'),
	(2, 'Clothing'),
	(3, 'Home Decor'),
	(4, 'Books'),
	(5, 'Accessories'),
	(6, 'Beauty'),
	(7, 'Toys'),
	(8, 'Sports'),
	(9, 'Kitchen');


CREATE TABLE Products (
  	product_ID INT PRIMARY KEY,
  	category_ID INT,
  	name VARCHAR(100),
  	price DECIMAL(10,2),
  	quantity_in_stock INT,
  	storage_type VARCHAR(100),
  	rating DECIMAL(2,1),
  	description TEXT,
   	discount DECIMAL(5, 2),
  	FOREIGN KEY (category_ID) REFERENCES Category(category_ID)
);


INSERT INTO Products (product_ID, category_ID, name, price, quantity_in_stock, storage_type, rating, description, discount) VALUES
	(1, 1, 'Wooden Chair', 50.00, 100, 'Warehouse', 4.5, 'Comfortable wooden chair for your home or office.', 10),
	(2, 1, 'Oak Dining Table', 200.00, 50, 'Warehouse', 4.8, 'Elegant dining table made of oak wood.', 15),
	(3, 2, 'Cotton T-Shirt', 20.00, 200, 'Shelf', 4.2, 'Casual cotton t-shirt for everyday wear.', 20),
	(4, 2, 'Denim Jeans', 35.00, 150, 'Shelf', 4.3, 'Classic denim jeans for a timeless look.', 10),
	(5, 3, 'Throw Pillow', 15.00, 300, 'Shelf', 4.0, 'Soft and cozy throw pillow for your sofa or bed.', 25);




CREATE TABLE Orders (
  	order_ID INT AUTO_INCREMENT PRIMARY KEY,
  	customer_username VARCHAR(50),
  	order_amount DECIMAL(10,2),
  	product_ID INT,
  	quantity INT,
  	date_order_placed DATE,
  	FOREIGN KEY (customer_username) REFERENCES Customer(username),
  	FOREIGN KEY (product_ID) REFERENCES Products(product_ID)
);



INSERT INTO Orders (order_ID, customer_username, order_amount, product_ID, quantity, date_order_placed) VALUES
	(1, 'user1', 100.00, 1, 2, '2024-02-01'),
	(2, 'user2', 400.00, 2, 1, '2024-02-02'),
	(3, 'user3', 60.00, 3, 5, '2024-02-03'),
	(4, 'user4', 50.00, 4, 3, '2024-02-04'),
	(5, 'user5', 375.00, 5, 15, '2024-02-05');


CREATE TABLE Cart (
    	Customer_Username VARCHAR(50) NOT NULL,
    	Billing_Amount DECIMAL(10, 2) NOT NULL,
    	product_ID INT NOT NULL,
    	Quantity INT NOT NULL,
    	Date_Added TIMESTAMP DEFAULT CURRENT_TIMESTAMP,  
    	FOREIGN KEY (Customer_Username) REFERENCES Customer(username),
    	FOREIGN KEY (product_ID) REFERENCES Products(product_ID)
);



INSERT INTO Cart (Customer_Username, Billing_Amount, product_ID, Quantity)
VALUES
	('user1', 100.00, 1, 2),
	('user2', 400.00, 2, 1),
	('user3', 60.00, 3, 5),
	('user4', 50.00, 4, 3),
	('user5', 375.00, 5, 15);


CREATE TABLE TrackOrder (
  	delivery_ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  	Delivery_man_first_name VARCHAR(100) NOT NULL,
  	Delivery_man_last_name VARCHAR(100) NOT NULL,
  	phone_number CHAR(10) NOT NULL,
  	vehicle_number VARCHAR(100) NOT NULL,
  	status INT DEFAULT 0,
  	order_ID INT NOT NULL,
  	pickup_house_number INT NOT NULL,
  	pickup_street_name VARCHAR(100) DEFAULT NULL,
  	pickup_city VARCHAR(100) NOT NULL,
  	pickup_pincode CHAR(6) NOT NULL,
  	expected_arrival_time DATETIME DEFAULT NULL,
  	delivery_house_number VARCHAR(10) NOT NULL,
  	delivery_street_name VARCHAR(100) DEFAULT NULL,
  	delivery_city VARCHAR(100) NOT NULL,
  	delivery_pincode CHAR(6) NOT NULL,
  	rating INT DEFAULT NULL,
  	FOREIGN KEY (order_ID) REFERENCES Orders(order_ID)
);


INSERT INTO TrackOrder (delivery_ID, Delivery_man_first_name, Delivery_man_last_name, phone_number, vehicle_number, status, order_ID, pickup_house_number, pickup_street_name, pickup_city, pickup_pincode, expected_arrival_time, delivery_house_number, delivery_street_name, delivery_city, delivery_pincode) VALUES
	(1,'John', 'Doe', '1234567890', 'Vehicle123', 0, 1, 123, 'Main St', 'New York', '10001', '2024-02-01 12:00:00', 456, 'Broadway', 'Los Angeles', '90001'),
	(2,'Jane', 'Smith', '2345678901', 'Vehicle456', 0, 2, 123, 'Main St', 'New York', '10001', '2024-02-02 13:00:00', 789, 'Oak Ave', 'Chicago', '60601'),
	(3,'Michael', 'Johnson', '3456789012', 'Vehicle789', 0, 3, 123, 'Main St', 'New York', '10001', '2024-02-03 14:00:00', 1011, 'Elm St', 'Houston', '77001'),
	(4,'Emily', 'Brown', '4567890123', 'Vehicle1011', 0, 4, 123, 'Main St', 'New York', '10001', '2024-02-04 15:00:00', 1213, 'Maple Ave', 'Phoenix', '85001'),
	(5,'Emma', 'Wilson', '5678901234', 'Vehicle1213', 0, 5, 123, 'Main St', 'New York', '10001', '2024-02-05 16:00:00', 1415, 'Cedar St', 'Philadelphia', '19101');


CREATE TABLE Billing (
  	billing_ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  	payment_mode VARCHAR(50) NOT NULL,
  	bill_amount DECIMAL(9,2) NOT NULL,
  	order_ID INT NOT NULL,
  	FOREIGN KEY (order_ID) REFERENCES Orders (order_ID)
);



INSERT INTO Billing (payment_mode, bill_amount, order_ID) VALUES
	('Cash', 100.00, 1),
	('Credit Card', 400.00, 2),
	('Debit Card', 60.00, 3),
	('Cash', 50.00, 4),
	('Credit Card', 375.00, 5),
	('Cash', 300.00, 6);


CREATE TABLE Seller (
  	seller_ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  	password VARCHAR(20) NOT NULL,
  	name varchar(30),
  	product_ID INT NOT NULL,
  	quantity_sold int not null,
  	phone_number CHAR(10) NOT NULL,
  	email_address VARCHAR(50) NOT NULL,
  	earnings int NOT NULL,
  	payment_details VARCHAR(50) NOT NULL,
  	FOREIGN KEY (product_ID) REFERENCES Products(product_ID)
);


INSERT INTO Seller (seller_ID, password, name, product_ID, quantity_sold, phone_number, email_address, earnings,  payment_details) VALUES
	(1,'pass123', 'John', 1, 100, '1234567890', 'john@example.com', 1000, 'Credit Card'),
	(2,'pass456', 'Jane', 2, 50, '2345678901', 'jane@example.com', 10000, 'PayPal'),
	(3,'pass789', 'Michael', 3, 200, '3456789012', 'michael@example.com', 4000, 'Bank Transfer'),
	(4,'passabc', 'Emily', 4, 150, '4567890123', 'emily@example.com', 5250, 'Cash on Delivery'),
	(5,'passdef', 'Emma', 5, 300, '5678901234', 'emma@example.com', 11250, 'Credit Card');



CREATE TABLE Return_entity (
    	return_ID INT NOT NULL AUTO_INCREMENT,
    	order_ID INT NOT NULL,
    	delivery_ID INT NOT NULL,
    	return_date DATE NOT NULL,
    	PRIMARY KEY(return_ID),
    	FOREIGN KEY (delivery_ID) REFERENCES TrackOrder(delivery_ID)
);



INSERT INTO Return_entity (return_ID, order_ID, delivery_ID, return_date) VALUES
	(1, 1, 1, '2024-02-10'),
	(2, 8, 8, '2024-02-11'),
	(3, 13, 13, '2024-02-15'),
	(4, 2, 2, '2024-02-13'),
	(5, 19, 19, '2024-02-22'),
	(6, 6, 6, '2024-02-09');


CREATE TABLE Inventory (
    	product_ID INT NOT NULL,
    	FOREIGN KEY (product_ID) REFERENCES Products (product_ID)
);


INSERT INTO Inventory (product_ID) VALUES
(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25);

*******************************************************************************************************************************************************************

CONTRIBUTIONS
Kanak Yadav (2022611) - created tables and inserted data, created doc, revised er model 
Neelu (2022) - created tables, created doc, revised er model 
Prakriti Jain (2022362) - created tables and inserted data, created doc, revised er model 
Sahil Prajapati (2022362) - created tables
